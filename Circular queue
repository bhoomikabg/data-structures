#include<stdio.h>
#define SIZE 5
int item[SIZE],front=-1,rear=-1;
int isFull()
{
    if((front==rear+1)|| (front==0 && rear==SIZE-1))
        return 1;
    return 0;
}
int isEmpty()
{
    if(front==-1)
        return 1;
    return 0;
}
void enQueue(int e)
{
    if(isFull())
        printf("\n Queue is full!!!");
    else{
        if(front==-1) front=0;
        rear=(rear+1)%SIZE;
        item[rear]=e;
        printf("\n Inserted element is %d\n",e);
    }
}
void deQueue(){
  int e;
  if(isEmpty()){
    printf("\n Queue is empty!!\n");
    return(-1);
  }
  else{
    e=item[front];
    if(front==rear){
        front=rear=-1;
    }
    else{
        front=(front+1)%SIZE;
    }
    printf("\n Deleted element is %d",e);
    return e;
  }
}
void display()
{
    int i;
    if(isEmpty())
    {
        printf("Queue is empty!!");
    }
    else{
        printf("\n Front->%d",front);
        printf("\n Items-> ");
        for(i=front;i!=rear;i=(i+1)%SIZE){
            printf("%d\n",item[i]);
        }
        printf("%d\n",item[i]);
        printf("\n Rear-> %d \n",rear);
    }
}
void main()
{
    int choice,n;
    while(1)
    {
        printf("1.Insert\n");
        printf("2.delete\n");
        printf("3.display\n");
        printf("4.exit\n");
        printf("enter your choice:");
        scanf("%d",&choice);
        switch(choice)
        {
        case 1:
            printf("element to be inserted:\n");
            scanf("%d",&n);
            enQueue(n);
            break;
        case 2:
            deQueue();
            break;
        case 3:
            display();
            break;
        case 4:
            exit(1);
        default:
            printf("Invalid choice\n");
        }
    }
}
